#!/bin/bash
set -ueo pipefail

# Rationale: qa-catalogue is run inside container but .env file is outside.

# Check whether .env file is specified
env_file=".env"
args=("${@}")
for ((i=0; i<"${#args[@]}"; ++i)); do
  case ${args[i]} in
   "-f"|"--env-file")
    env_file=${args[i+1]}
    if [[ ! -f "$env_file" ]]; then
      echo >&2 "Missing file: $env_file"
      exit 1
    fi
    unset args[i]; unset args[i+1]; break ;;
  esac
done

[ -f "$env_file" ] && source "$env_file"

CONTAINER=${CONTAINER:=metadata-qa-marc}

if [ ${#args[@]} == 0 ]; then
  echo "Usage: $0 [options] <command[,command...]>"
  echo
  echo "Run QA catalogue within Docker container '$CONTAINER' (environment"
  echo "variable CONTAINER). Try command 'help' for usage of QA catalogue!"
  echo "Environment variables are read from .env or file given with --env-file."
else
  # We can't use --env-file because Docker run expects no quotation (WTF?!)
  # TODO: use default for BASE_INPUT_DIR and BASE_OUTPUT_DIR in Docker image
  set -x
  docker container exec -it \
    -e ANALYSES="${ANALYSES:-}" \
    -e CATALOGUE="${CATALOGUE:-}" \
    -e INPUT_DIR="${INPUT_DIR:-}" \
    -e MASK="${MASK:-}" \
    -e NAME="${NAME:-}" \
    -e SCHEMA="${SCHEMA:-}" \
    -e TYPE_PARAMS="${TYPE_PARAMS:-}" \
    -e UPDATE="${UPDATE:-}" \
    -e VERSION="${VERSION:-}" \
    "$CONTAINER" \
    ./qa-catalogue \
    "${args[@]}"
fi

